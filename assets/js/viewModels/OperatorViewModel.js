// Generated by CoffeeScript 1.6.1
(function() {
  var OperatorViewModel,
    _this = this;

  OperatorViewModel = (function() {

    function OperatorViewModel(operator) {
      var _this = this;
      this.cancelResetPassword = function() {
        return OperatorViewModel.prototype.cancelResetPassword.apply(_this, arguments);
      };
      this.confirmResetPassword = function(d, e) {
        return OperatorViewModel.prototype.confirmResetPassword.apply(_this, arguments);
      };
      this.resetSessions = function() {
        return OperatorViewModel.prototype.resetSessions.apply(_this, arguments);
      };
      this.resetPassword = function(data, e) {
        return OperatorViewModel.prototype.resetPassword.apply(_this, arguments);
      };
      _.extend(this, operator);
      this.resettingPassword = ko.observable(false);
      this.newpassword = ko.observable("");
      this.confirmpassword = ko.observable("");
      this.notami = ko.computed(function() {
        return _this.login !== cpanel.whois && !_this.resettingPassword();
      });
      this.hasSessions = ko.computed(function() {
        return !_this.resettingPassword();
      });
    }

    OperatorViewModel.prototype.resetPassword = function(data, e) {
      return this.resettingPassword(true);
    };

    OperatorViewModel.prototype.remove = function(data, e) {
      var p;
      if (this.notami) {
        p = cpanel.rest["delete"](["operator", this.id]);
        $(e.target).button("loading");
        return p.done(function() {
          return cpanel.loadOperators(function() {
            return $(e.target).button("reset");
          });
        });
      }
    };

    OperatorViewModel.prototype.resetSessions = function() {
      return alert("feature is under development");
    };

    OperatorViewModel.prototype.confirmResetPassword = function(d, e) {
      var p,
        _this = this;
      if (this.newpassword() !== this.confirmpassword()) {
        alert("Пароли не совпадают!");
        return;
      }
      $(e.target).button("loading");
      p = cpanel.rest.put(["index", this.login], {
        new_password: this.newpassword()
      });
      return p.done(function(data) {
        $(e.target).button("reset");
        _this.resettingPassword(false);
        if (data && data.error) {
          return alert(data.error);
        }
      });
    };

    OperatorViewModel.prototype.cancelResetPassword = function() {
      return this.resettingPassword(false);
    };

    return OperatorViewModel;

  })();

  module.exports = OperatorViewModel;

}).call(this);
