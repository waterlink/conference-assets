// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  global.UserViewModel = require("../assets/js/viewModels/UserViewModel");

  global.OperatorViewModel = require("../assets/js/viewModels/OperatorViewModel");

  window.AdminViewModel = (function() {

    function AdminViewModel() {
      var _this = this;
      this.cancelAddOperator = function() {
        return AdminViewModel.prototype.cancelAddOperator.apply(_this, arguments);
      };
      this.confirmAddOperator = function(d, e) {
        return AdminViewModel.prototype.confirmAddOperator.apply(_this, arguments);
      };
      this.newOperator = function() {
        return AdminViewModel.prototype.newOperator.apply(_this, arguments);
      };
      this.goOperatorPage = function() {
        return AdminViewModel.prototype.goOperatorPage.apply(_this, arguments);
      };
      this.prevPage = function() {
        return AdminViewModel.prototype.prevPage.apply(_this, arguments);
      };
      this.nextPage = function() {
        return AdminViewModel.prototype.nextPage.apply(_this, arguments);
      };
      this.doSearch = function(data, event) {
        return AdminViewModel.prototype.doSearch.apply(_this, arguments);
      };
      this.readableStatus = function(status) {
        return AdminViewModel.prototype.readableStatus.apply(_this, arguments);
      };
      this.name = "Петя";
      this.statuses = ko.observableArray([
        {
          text: "new",
          checked: false
        }, {
          text: "emailsent",
          checked: false
        }, {
          text: "paid",
          checked: false
        }
      ]);
      this.page = ko.observable(0);
      this.userCount = ko.observable(0);
      this.users = ko.observableArray([]);
      this.search = ko.observable("");
      this.prevPageClass = ko.computed(function() {
        if (_this.page() === 0) {
          return "btn disabled";
        }
        return "btn";
      });
      this.nextPageClass = ko.computed(function() {
        if (_this.userCount() < global.cpanelPageLimit) {
          return "btn disabled";
        }
        return "btn";
      });
      this.isAdmin = ko.computed(function() {
        return __indexOf.call(cpanel.group, "admin") >= 0;
      });
      this.operators = ko.observableArray([]);
      if (this.isAdmin()) {
        cpanel.loadOperators();
      }
      this.addingOperator = ko.observable(false);
      this.operatorLogin = ko.observable("");
      this.operatorPassword = ko.observable("");
      this.operatorConfirmPassword = ko.observable("");
    }

    AdminViewModel.prototype.doSignOut = function() {
      return window.location.href = "registration.html";
    };

    AdminViewModel.prototype.isFiltered = function(text) {
      var allUnchecked, status, _i, _len, _ref;
      allUnchecked = true;
      _ref = this.statuses();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        status = _ref[_i];
        if (status.checked) {
          allUnchecked = false;
        }
        if (status.text === text && status.checked) {
          return true;
        }
      }
      return allUnchecked;
    };

    AdminViewModel.prototype.readableStatus = function(status) {
      switch (status) {
        case "new":
          return "Новый";
        case "emailsent":
          return "Ожидаем оплаты";
        case "paid":
          return "Оплачен";
      }
    };

    AdminViewModel.prototype.doSearch = function(data, event) {
      var _this = this;
      if (event.which === 13) {
        $("#search_query").blur();
        setTimeout(function() {
          return cpanel.loadUsers();
        }, 30);
        event.preventDefault();
        false;
      }
      return true;
    };

    AdminViewModel.prototype.nextPage = function() {
      if (this.userCount() === global.cpanelPageLimit) {
        cpanel.page++;
        this.page(cpanel.page);
        cpanel.filter.skip += global.cpanelPageLimit;
        return cpanel.loadUsers();
      }
    };

    AdminViewModel.prototype.prevPage = function() {
      if (this.page() > 0) {
        cpanel.page--;
        this.page(cpanel.page);
        cpanel.filter.skip -= global.cpanelPageLimit;
        return cpanel.loadUsers();
      }
    };

    AdminViewModel.prototype.goOperatorPage = function() {
      var initialOffset, p,
        _this = this;
      if (cpanel.operator_page) {
        return;
      }
      $("#operators_li").addClass("active");
      initialOffset = $("#user_page").offset();
      if (cpanel.active_page) {
        cpanel.active_page.addClass("cpanel-navigation-goaway-right");
        cpanel.active_page = void 0;
        $('.hidden-page').remove();
        $("#user_page").removeClass("cpanel-navigation-goaway-left");
      }
      $("#user_page").addClass("cpanel-navigation-goaway-right");
      p = $("<div>").addClass("hidden-page-right");
      p.html("<i class=\"icon-tag\"></i> <span>Все<br/>учатники</span>");
      p.attr("rel", "#user_page");
      p.css({
        top: "80px"
      });
      p.click(function() {
        $("#user_page").css({
          position: "fixed",
          left: initialOffset.left,
          top: initialOffset.top
        });
        $("#user_page").removeClass("cpanel-navigation-goaway-right");
        $("#user_page").removeClass("cpanel-navigation-goaway-left");
        cpanel.operator_page = $(".operator-page .container");
        if (cpanel.operator_page.length) {
          $("#operators_li").removeClass("active");
          cpanel.operator_page.addClass("cpanel-navigation-goaway-left");
          cpanel.operator_page = void 0;
        }
        p.remove();
        return setTimeout(function() {
          return $("#user_page").attr("style", "");
        }, 500);
      });
      setTimeout(function() {
        return $("body").append(p);
      }, 350);
      return setTimeout(function() {
        var operator_page;
        operator_page = $(".operator-page .container");
        operator_page.css({
          position: "fixed",
          left: initialOffset.left,
          top: initialOffset.top
        });
        operator_page.removeClass("cpanel-navigation-goaway-left");
        cpanel.operator_page = operator_page;
        return setTimeout(function() {
          return operator_page.attr("style", "");
        }, 500);
      }, 50);
    };

    AdminViewModel.prototype.newOperator = function() {
      return this.addingOperator(true);
    };

    AdminViewModel.prototype.confirmAddOperator = function(d, e) {
      var p,
        _this = this;
      if (this.operatorPassword() !== this.operatorConfirmPassword()) {
        alert("Пароли не совпадают!");
        return;
      }
      $(e.target).button("loading");
      p = cpanel.rest.post("index", {
        login: this.operatorLogin(),
        password: this.operatorPassword()
      });
      return p.done(function(data) {
        $(e.target).button("reset");
        _this.cancelAddOperator();
        if (data && data.error) {
          return alert(data.error);
        } else {
          return cpanel.loadOperators();
        }
      });
    };

    AdminViewModel.prototype.cancelAddOperator = function() {
      this.addingOperator(false);
      this.operatorLogin("");
      this.operatorPassword("");
      return this.operatorConfirmPassword("");
    };

    return AdminViewModel;

  })();

  module.exports = window.AdminViewModel;

}).call(this);
