// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this;

  global.UserViewModel = require("../assets/js/viewModels/UserViewModel");

  window.AdminViewModel = (function() {

    function AdminViewModel() {
      var _this = this;
      this.prevPage = function() {
        return AdminViewModel.prototype.prevPage.apply(_this, arguments);
      };
      this.nextPage = function() {
        return AdminViewModel.prototype.nextPage.apply(_this, arguments);
      };
      this.doSearch = function(data, event) {
        return AdminViewModel.prototype.doSearch.apply(_this, arguments);
      };
      this.readableStatus = function(status) {
        return AdminViewModel.prototype.readableStatus.apply(_this, arguments);
      };
      this.name = "Петя";
      this.statuses = ko.observableArray([
        {
          text: "new",
          checked: false
        }, {
          text: "emailsent",
          checked: false
        }, {
          text: "paid",
          checked: false
        }
      ]);
      this.page = ko.observable(0);
      this.userCount = ko.observable(0);
      this.users = ko.observableArray([]);
      this.search = ko.observable("");
      this.prevPageClass = ko.computed(function() {
        if (_this.page() === 0) {
          return "btn disabled";
        }
        return "btn";
      });
      this.nextPageClass = ko.computed(function() {
        if (_this.userCount() < global.cpanelPageLimit) {
          return "btn disabled";
        }
        return "btn";
      });
    }

    AdminViewModel.prototype.doSignOut = function() {
      return window.location.href = "registration.html";
    };

    AdminViewModel.prototype.isFiltered = function(text) {
      var allUnchecked, status, _i, _len, _ref;
      allUnchecked = true;
      _ref = this.statuses();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        status = _ref[_i];
        if (status.checked) {
          allUnchecked = false;
        }
        if (status.text === text && status.checked) {
          return true;
        }
      }
      return allUnchecked;
    };

    AdminViewModel.prototype.readableStatus = function(status) {
      switch (status) {
        case "new":
          return "Новый";
        case "emailsent":
          return "Ожидаем оплаты";
        case "paid":
          return "Оплачен";
      }
    };

    AdminViewModel.prototype.doSearch = function(data, event) {
      var _this = this;
      if (event.which === 13) {
        $("#search_query").blur();
        setTimeout(function() {
          return cpanel.loadUsers();
        }, 30);
        event.preventDefault();
        false;
      }
      return true;
    };

    AdminViewModel.prototype.nextPage = function() {
      if (this.userCount() === global.cpanelPageLimit) {
        cpanel.page++;
        this.page(cpanel.page);
        cpanel.filter.skip += global.cpanelPageLimit;
        return cpanel.loadUsers();
      }
    };

    AdminViewModel.prototype.prevPage = function() {
      if (this.page() > 0) {
        cpanel.page--;
        this.page(cpanel.page);
        cpanel.filter.skip -= global.cpanelPageLimit;
        return cpanel.loadUsers();
      }
    };

    return AdminViewModel;

  })();

  module.exports = window.AdminViewModel;

}).call(this);
